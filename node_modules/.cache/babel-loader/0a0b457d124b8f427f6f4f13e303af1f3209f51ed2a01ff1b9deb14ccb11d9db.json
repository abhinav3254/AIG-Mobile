{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{useNavigate}from'react-router-dom';import'../theme/PhoneVerification.css';// Import your CSS file\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const countryCodes=[{code:'+1',country:'USA'},{code:'+91',country:'India'},{code:'+44',country:'UK'}// Add more country codes as needed\n];const PhoneVerification=()=>{const[phoneNumber,setPhoneNumber]=useState('');const[countryCode,setCountryCode]=useState(countryCodes[0].code);const[isOtpScreen,setIsOtpScreen]=useState(false);const[timer,setTimer]=useState(180);// 3 minutes in seconds\nconst handleGetCode=()=>{setIsOtpScreen(true);setTimer(180);// Reset timer when going to OTP screen\n};useEffect(()=>{let interval;if(timer>0){interval=setInterval(()=>{setTimer(prevTimer=>prevTimer-1);},1000);}return()=>clearInterval(interval);// Clear interval on component unmount\n},[timer]);return/*#__PURE__*/_jsx(\"div\",{className:\"verification-container\",children:isOtpScreen?/*#__PURE__*/_jsx(OtpVerification,{phoneNumber:`${countryCode} ${phoneNumber}`,timer:timer}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"phone-verification-title\",children:\"Verify your phone number\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"phone-verification-text\",children:[\"We will send you  an\",/*#__PURE__*/_jsx(\"strong\",{children:\" One Time Password (OTP)\"}),\" to this mobile number\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"phone-input-container\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"phone-number-label\",children:\"Enter mobile no.* \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"country-code-container\",children:/*#__PURE__*/_jsx(\"select\",{value:countryCode,onChange:e=>setCountryCode(e.target.value),className:\"country-code-select\",children:countryCodes.map((country,index)=>/*#__PURE__*/_jsx(\"option\",{value:country.code,children:country.code},index))})}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",value:phoneNumber,onChange:e=>setPhoneNumber(e.target.value),placeholder:\"Mobile number\",className:\"phone-input\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"get-code-button\",onClick:handleGetCode,children:\"Get Code\"})]})});};// /\nconst OtpVerification=_ref=>{let{phoneNumber,timer}=_ref;const[otp,setOtp]=useState(['','','','']);// 4 boxes for OTP input\nconst inputRefs=useRef([]);const handleChange=(index,value)=>{if(value.length<=1){const newOtp=[...otp];newOtp[index]=value;setOtp(newOtp);if(value&&index<3){var _document$getElementB;(_document$getElementB=document.getElementById(`otp-input-${index+1}`))===null||_document$getElementB===void 0?void 0:_document$getElementB.focus();}if(value&&index<otp.length-1){inputRefs.current[index+1].focus();}}};const history=useNavigate();const handleSubmit=()=>{history('/mpin');};const formatTime=time=>{const minutes=Math.floor(time/60);const seconds=time%60;return`${String(minutes).padStart(2,'0')}:${String(seconds).padStart(2,'0')}`;};const handleResend=()=>{// Logic to handle resending the OTP can be added here\nalert('OTP resent!');};return/*#__PURE__*/_jsxs(\"div\",{className:\"otp-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"otp-title\",children:\"OTP Verification\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"otp-verification-title\",children:\"Enter the code from the SMS we sent to\"}),/*#__PURE__*/_jsx(\"p\",{className:\"otp-phone-number\",children:/*#__PURE__*/_jsx(\"strong\",{children:phoneNumber})}),/*#__PURE__*/_jsx(\"div\",{className:\"timer\",children:formatTime(timer)}),/*#__PURE__*/_jsx(\"div\",{className:\"otp-input-container\",children:otp.map((value,index)=>/*#__PURE__*/_jsx(\"input\",{id:`otp-input-${index+1}`,type:\"text\",value:value,onChange:e=>handleChange(index,e.target.value),className:\"otp-input\",maxLength:1,ref:el=>inputRefs.current[index]=el},index))}),/*#__PURE__*/_jsxs(\"p\",{className:\"resend-text\",children:[\"I didnt receive any code? \",/*#__PURE__*/_jsx(\"span\",{className:\"resend-link\",onClick:handleResend,children:\"Resend\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"submit-button\",onClick:handleSubmit,children:\"Submit\"})]});};export default PhoneVerification;","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","countryCodes","code","country","PhoneVerification","phoneNumber","setPhoneNumber","countryCode","setCountryCode","isOtpScreen","setIsOtpScreen","timer","setTimer","handleGetCode","interval","setInterval","prevTimer","clearInterval","className","children","OtpVerification","value","onChange","e","target","map","index","type","placeholder","onClick","_ref","otp","setOtp","inputRefs","handleChange","length","newOtp","_document$getElementB","document","getElementById","focus","current","history","handleSubmit","formatTime","time","minutes","Math","floor","seconds","String","padStart","handleResend","alert","id","maxLength","ref","el"],"sources":["C:/Users/MFokmare/Downloads/AIG-Mobile/src/Pages/PhoneVerification.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../theme/PhoneVerification.css'; // Import your CSS file\r\n\r\nconst countryCodes = [\r\n  { code: '+1', country: 'USA' },\r\n  { code: '+91', country: 'India' },\r\n  { code: '+44', country: 'UK' },\r\n  // Add more country codes as needed\r\n];\r\n\r\nconst PhoneVerification= () => {\r\n\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [countryCode, setCountryCode] = useState(countryCodes[0].code);\r\n  const [isOtpScreen, setIsOtpScreen] = useState(false);\r\n  const [timer, setTimer] = useState(180); // 3 minutes in seconds\r\n\r\n  const handleGetCode = () => {\r\n    setIsOtpScreen(true);\r\n    setTimer(180); // Reset timer when going to OTP screen\r\n  };\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n\r\n    if (timer > 0) {\r\n      interval = setInterval(() => {\r\n        setTimer((prevTimer) => prevTimer - 1);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => clearInterval(interval); // Clear interval on component unmount\r\n  }, [timer]);\r\n\r\n  return (\r\n    <div className=\"verification-container\">\r\n      {isOtpScreen ? (\r\n        <OtpVerification phoneNumber={`${countryCode} ${phoneNumber}`} timer={timer} />\r\n      ) : (\r\n        <>\r\n          <h2 className=\"phone-verification-title\">Verify your phone number</h2>\r\n          <p className=\"phone-verification-text\">\r\n            We will send you  an<strong> One Time Password (OTP)</strong> to this mobile number\r\n          </p>\r\n          <div className=\"phone-input-container\">\r\n            <label className=\"phone-number-label\">Enter mobile no.* </label>\r\n            <div className=\"input-container\">\r\n              <div className=\"country-code-container\">\r\n                <select \r\n                  value={countryCode} \r\n                  onChange={(e) => setCountryCode(e.target.value)} \r\n                  className=\"country-code-select\"\r\n                >\r\n                  {countryCodes.map((country, index) => (\r\n                    <option key={index} value={country.code}>\r\n                      {country.code}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <input\r\n                type=\"tel\"\r\n                value={phoneNumber}\r\n                onChange={(e) => setPhoneNumber(e.target.value)}\r\n                placeholder=\"Mobile number\"\r\n                className=\"phone-input\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <button className=\"get-code-button\" onClick={handleGetCode}>\r\n            Get Code\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// /\r\n\r\nconst OtpVerification = ({ phoneNumber, timer }) => {\r\n  const [otp, setOtp] = useState(['', '', '', '']); // 4 boxes for OTP input\r\n  const inputRefs = useRef([]);\r\n\r\n  const handleChange = (index, value) => {\r\n    if (value.length <= 1) {\r\n      const newOtp = [...otp];\r\n      newOtp[index] = value;\r\n      setOtp(newOtp);\r\n      if (value && index < 3) {\r\n        document.getElementById(`otp-input-${index + 1}`)?.focus();\r\n      }\r\n      if (value && index < otp.length - 1) {\r\n        inputRefs.current[index + 1].focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  const history = useNavigate();\r\n  \r\n  const handleSubmit = () => {\r\n    history('/mpin'); \r\n  };\r\n\r\n  const formatTime = (time) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n    return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n  };\r\n\r\n  const handleResend = () => {\r\n    // Logic to handle resending the OTP can be added here\r\n    alert('OTP resent!');\r\n  };\r\n\r\n  return (\r\n    <div className=\"otp-container\">\r\n      <h2 className=\"otp-title\">OTP Verification</h2>\r\n      <h3 className=\"otp-verification-title\">Enter the code from the SMS we sent to</h3>\r\n      <p className=\"otp-phone-number\"><strong>{phoneNumber}</strong></p>\r\n      <div className=\"timer\">{formatTime(timer)}</div>\r\n      <div className=\"otp-input-container\">\r\n        {otp.map((value, index) => (\r\n          <input\r\n            key={index}\r\n            id={`otp-input-${index + 1}`}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={(e) => handleChange(index, e.target.value)}\r\n            className=\"otp-input\"\r\n            maxLength={1}\r\n            ref={(el) => (inputRefs.current[index] = el)} \r\n          />\r\n        ))}\r\n      </div>\r\n      <p className=\"resend-text\">\r\n        I didnt receive any code? <span className=\"resend-link\" onClick={handleResend}>Resend</span>\r\n      </p>\r\n      <button className=\"submit-button\" onClick={handleSubmit}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhoneVerification;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}