{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MFokmare\\\\Downloads\\\\AIG-Mobile\\\\src\\\\Pages\\\\PhoneVerification.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../theme/PhoneVerification.scss'; // Import your CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst countryCodes = [{\n  code: '+1',\n  country: 'USA'\n}, {\n  code: '+91',\n  country: 'India'\n}, {\n  code: '+44',\n  country: 'UK'\n}\n// Add more country codes as needed\n];\nconst PhoneVerification = () => {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [countryCode, setCountryCode] = useState(countryCodes[0].code);\n  const [isOtpScreen, setIsOtpScreen] = useState(false);\n  const [timer, setTimer] = useState(180); // 3 minutes in seconds\n\n  const handleGetCode = () => {\n    setIsOtpScreen(true);\n    setTimer(180); // Reset timer when going to OTP screen\n  };\n  useEffect(() => {\n    let interval;\n    if (timer > 0) {\n      interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval); // Clear interval on component unmount\n  }, [timer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verification-container\",\n    children: isOtpScreen ? /*#__PURE__*/_jsxDEV(OtpVerification, {\n      phoneNumber: `${countryCode} ${phoneNumber}`,\n      timer: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"phone-verification-title\",\n        children: \"Verify your phone number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"phone-verification-text\",\n        children: [\"We will send you  an\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \" One Time Password (OTP)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }, this), \" to this mobile number\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phone-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"phone-number-label\",\n          children: \"Enter mobile no.* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"country-code-container\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: countryCode,\n              onChange: e => setCountryCode(e.target.value),\n              className: \"country-code-select\",\n              children: countryCodes.map((country, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: country.code,\n                children: country.code\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            value: phoneNumber,\n            onChange: e => setPhoneNumber(e.target.value),\n            placeholder: \"Mobile number\",\n            className: \"phone-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"get-code-button\",\n        onClick: handleGetCode,\n        children: \"Get Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n// /\n_s(PhoneVerification, \"6lsdV9wjKgQ+XJOmO0qA0oMPeWM=\");\n_c = PhoneVerification;\nconst OtpVerification = ({\n  phoneNumber,\n  timer\n}) => {\n  _s2();\n  const [otp, setOtp] = useState(['', '', '', '']); // 4 boxes for OTP input\n  const inputRefs = useRef([]);\n  const handleChange = (index, value) => {\n    if (value.length <= 1) {\n      const newOtp = [...otp];\n      newOtp[index] = value;\n      setOtp(newOtp);\n      if (value && index < 3) {\n        var _document$getElementB;\n        (_document$getElementB = document.getElementById(`otp-input-${index + 1}`)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.focus();\n      }\n      if (value && index < otp.length - 1) {\n        inputRefs.current[index + 1].focus();\n      }\n    }\n  };\n  const history = useNavigate();\n  const handleSubmit = () => {\n    history('/mpin');\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n  };\n  const handleResend = () => {\n    // Logic to handle resending the OTP can be added here\n    alert('OTP resent!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"otp-title\",\n      children: \"OTP Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"otp-verification-title\",\n      children: \"Enter the code from the SMS we sent to\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"otp-phone-number\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: phoneNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: formatTime(timer)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-input-container\",\n      children: otp.map((value, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        id: `otp-input-${index + 1}`,\n        type: \"tel\" // Use 'tel' instead of 'text'\n        ,\n        pattern: \"[0-9]*\" // Ensures only numbers are allowed\n        ,\n        inputMode: \"numeric\",\n        value: value,\n        onChange: e => handleChange(index, e.target.value),\n        className: \"otp-input\",\n        maxLength: 1,\n        ref: el => inputRefs.current[index] = el\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"resend-text\",\n      children: [\"I didnt receive any code? \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"resend-link\",\n        onClick: handleResend,\n        children: \"Resend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s2(OtpVerification, \"U4KbkZ2EIcu6Oj/ao9bU9uRShW8=\", false, function () {\n  return [useNavigate];\n});\n_c2 = OtpVerification;\nexport default PhoneVerification;\nvar _c, _c2;\n$RefreshReg$(_c, \"PhoneVerification\");\n$RefreshReg$(_c2, \"OtpVerification\");","map":{"version":3,"names":["useEffect","useRef","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","countryCodes","code","country","PhoneVerification","_s","phoneNumber","setPhoneNumber","countryCode","setCountryCode","isOtpScreen","setIsOtpScreen","timer","setTimer","handleGetCode","interval","setInterval","prevTimer","clearInterval","className","children","OtpVerification","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","index","type","placeholder","onClick","_c","_s2","otp","setOtp","inputRefs","handleChange","length","newOtp","_document$getElementB","document","getElementById","focus","current","history","handleSubmit","formatTime","time","minutes","Math","floor","seconds","String","padStart","handleResend","alert","id","pattern","inputMode","maxLength","ref","el","_c2","$RefreshReg$"],"sources":["C:/Users/MFokmare/Downloads/AIG-Mobile/src/Pages/PhoneVerification.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../theme/PhoneVerification.scss'; // Import your CSS file\r\n\r\nconst countryCodes = [\r\n  { code: '+1', country: 'USA' },\r\n  { code: '+91', country: 'India' },\r\n  { code: '+44', country: 'UK' },\r\n  // Add more country codes as needed\r\n];\r\n\r\nconst PhoneVerification= () => {\r\n\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [countryCode, setCountryCode] = useState(countryCodes[0].code);\r\n  const [isOtpScreen, setIsOtpScreen] = useState(false);\r\n  const [timer, setTimer] = useState(180); // 3 minutes in seconds\r\n\r\n  const handleGetCode = () => {\r\n    setIsOtpScreen(true);\r\n    setTimer(180); // Reset timer when going to OTP screen\r\n  };\r\n\r\n  useEffect(() => {\r\n    let interval:any;\r\n\r\n    if (timer > 0) {\r\n      interval = setInterval(() => {\r\n        setTimer((prevTimer) => prevTimer - 1);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => clearInterval(interval); // Clear interval on component unmount\r\n  }, [timer]);\r\n\r\n  return (\r\n    <div className=\"verification-container\">\r\n      {isOtpScreen ? (\r\n        <OtpVerification phoneNumber={`${countryCode} ${phoneNumber}`} timer={timer} />\r\n      ) : (\r\n        <>\r\n          <h2 className=\"phone-verification-title\">Verify your phone number</h2>\r\n          <p className=\"phone-verification-text\">\r\n            We will send you  an<strong> One Time Password (OTP)</strong> to this mobile number\r\n          </p>\r\n          <div className=\"phone-input-container\">\r\n            <label className=\"phone-number-label\">Enter mobile no.* </label>\r\n            <div className=\"input-container\">\r\n              <div className=\"country-code-container\">\r\n                <select \r\n                  value={countryCode} \r\n                  onChange={(e) => setCountryCode(e.target.value)} \r\n                  className=\"country-code-select\"\r\n                >\r\n                  {countryCodes.map((country, index) => (\r\n                    <option key={index} value={country.code}>\r\n                      {country.code}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <input\r\n                type=\"tel\"\r\n                value={phoneNumber}\r\n                onChange={(e) => setPhoneNumber(e.target.value)}\r\n                placeholder=\"Mobile number\"\r\n                className=\"phone-input\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <button className=\"get-code-button\" onClick={handleGetCode}>\r\n            Get Code\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// /\r\n\r\nconst OtpVerification = ({ phoneNumber, timer }:any) => {\r\n  const [otp, setOtp] = useState(['', '', '', '']); // 4 boxes for OTP input\r\n  const inputRefs = useRef<any>([]);\r\n\r\n  const handleChange = (index: number, value: string | any[]) => {\r\n    if (value.length <= 1) {\r\n      const newOtp:any = [...otp];\r\n      newOtp[index] = value;\r\n      setOtp(newOtp);\r\n      if (value && index < 3) {\r\n        document.getElementById(`otp-input-${index + 1}`)?.focus();\r\n      }\r\n      if (value && index < otp.length - 1) {\r\n        inputRefs.current[index + 1].focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  const history = useNavigate();\r\n  \r\n  const handleSubmit = () => {\r\n    history('/mpin'); \r\n  };\r\n\r\n  const formatTime = (time:any) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n    return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n  };\r\n\r\n  const handleResend = () => {\r\n    // Logic to handle resending the OTP can be added here\r\n    alert('OTP resent!');\r\n  };\r\n\r\n  return (\r\n    <div className=\"otp-container\">\r\n      <h2 className=\"otp-title\">OTP Verification</h2>\r\n      <h3 className=\"otp-verification-title\">Enter the code from the SMS we sent to</h3>\r\n      <p className=\"otp-phone-number\"><strong>{phoneNumber}</strong></p>\r\n      <div className=\"timer\">{formatTime(timer)}</div>\r\n      <div className=\"otp-input-container\">\r\n        {otp.map((value, index) => (\r\n          <input\r\n            key={index}\r\n            id={`otp-input-${index + 1}`}\r\n            type=\"tel\"  // Use 'tel' instead of 'text'\r\n            pattern=\"[0-9]*\"  // Ensures only numbers are allowed\r\n            inputMode=\"numeric\"\r\n            value={value}\r\n            onChange={(e) => handleChange(index, e.target.value)}\r\n            className=\"otp-input\"\r\n            maxLength={1}\r\n            ref={(el) => (inputRefs.current[index] = el)} \r\n          />\r\n        ))}\r\n      </div>\r\n      <p className=\"resend-text\">\r\n        I didnt receive any code? <span className=\"resend-link\" onClick={handleResend}>Resend</span>\r\n      </p>\r\n      <button className=\"submit-button\" onClick={handleSubmit}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhoneVerification;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}