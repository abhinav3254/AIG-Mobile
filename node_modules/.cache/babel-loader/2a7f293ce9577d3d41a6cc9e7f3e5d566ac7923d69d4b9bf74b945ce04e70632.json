{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import'../theme/Mpin.css';import successIcon from'../assests/images/mpin-icon.png';// Update the path as necessary\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Mpin=()=>{const[mpin,setMpin]=useState(['','','','']);const[confirmMpin,setConfirmMpin]=useState(['','','','']);const[isModalOpen,setIsModalOpen]=useState(false);const handleChange=(index,value,isConfirm)=>{if(value.length<=1){const newMpin=isConfirm?[...confirmMpin]:[...mpin];newMpin[index]=value;if(isConfirm){setConfirmMpin(newMpin);}else{setMpin(newMpin);}if(value&&index<3){var _document$getElementB;(_document$getElementB=document.getElementById(`${isConfirm?'confirm':'mpin'}-input-${index+1}`))===null||_document$getElementB===void 0?void 0:_document$getElementB.focus();}}};const history=useNavigate();const handleSubmit=()=>{const mpinCode=mpin.join('');const confirmCode=confirmMpin.join('');if(mpinCode===confirmCode){setIsModalOpen(true);// Open the modal\n}else{alert('MPINs do not match. Please try again.');}history('/profile');};const handleCloseModal=()=>{setIsModalOpen(false);// Close the modal\n};const handleNext=()=>{// Logic for next action\nalert('Next action');// Replace this with your desired action\nhandleCloseModal();// Close modal after next action\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"mpin-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"mpin-title\",children:\"Enter mPIN\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mpin-instruction\",children:\"Set up a 4-digit MPIN for quick access\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mpin-input-container\",children:mpin.map((value,index)=>/*#__PURE__*/_jsx(\"input\",{id:`mpin-input-${index+1}`,type:\"text\",value:value,onChange:e=>handleChange(index,e.target.value,false),className:\"mpin-input\",maxLength:1},index))}),/*#__PURE__*/_jsx(\"p\",{className:\"mpin-instruction\",children:\"Confirm pin with the same boxes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mpin-input-container\",children:confirmMpin.map((value,index)=>/*#__PURE__*/_jsx(\"input\",{id:`confirm-input-${index+1}`,type:\"text\",value:value,onChange:e=>handleChange(index,e.target.value,true),className:\"mpin-input\",maxLength:1},index))}),/*#__PURE__*/_jsx(\"button\",{className:\"confirm-mpin-button\",onClick:handleSubmit,children:\"Confirm mPIN\"}),isModalOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"close-button\",onClick:handleCloseModal,children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"img\",{src:successIcon,alt:\"Success Icon\",className:\"modal-icon\"}),/*#__PURE__*/_jsx(\"p\",{className:\"modal-message\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Your mPIN has been set successfully\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"next-button\",onClick:handleNext,children:\"Next\"})]})})]});};export default Mpin;","map":{"version":3,"names":["React","useState","useNavigate","successIcon","jsx","_jsx","jsxs","_jsxs","Mpin","mpin","setMpin","confirmMpin","setConfirmMpin","isModalOpen","setIsModalOpen","handleChange","index","value","isConfirm","length","newMpin","_document$getElementB","document","getElementById","focus","history","handleSubmit","mpinCode","join","confirmCode","alert","handleCloseModal","handleNext","className","children","map","id","type","onChange","e","target","maxLength","onClick","src","alt"],"sources":["C:/Users/MFokmare/Downloads/AIG-Mobile/src/Pages/Mpin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../theme/Mpin.css';\r\n\r\nimport successIcon from '../assests/images/mpin-icon.png'; // Update the path as necessary\r\n\r\nconst Mpin = () => {\r\n\r\n  const [mpin, setMpin] = useState(['', '', '', '']);\r\n  const [confirmMpin, setConfirmMpin] = useState(['', '', '', '']);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleChange = (index, value, isConfirm) => {\r\n    if (value.length <= 1) {\r\n      const newMpin = isConfirm ? [...confirmMpin] : [...mpin];\r\n      newMpin[index] = value;\r\n\r\n      if (isConfirm) {\r\n        setConfirmMpin(newMpin);\r\n      } else {\r\n        setMpin(newMpin);\r\n      }\r\n\r\n      if (value && index < 3) {\r\n        document.getElementById(`${isConfirm ? 'confirm' : 'mpin'}-input-${index + 1}`)?.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  const history = useNavigate();\r\n\r\n  const handleSubmit = () => {\r\n    const mpinCode = mpin.join('');\r\n    const confirmCode = confirmMpin.join('');\r\n    if (mpinCode === confirmCode) {\r\n      setIsModalOpen(true); // Open the modal\r\n    } else {\r\n      alert('MPINs do not match. Please try again.');\r\n    }\r\n\r\n    history('/profile'); \r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false); // Close the modal\r\n  };\r\n\r\n  const handleNext = () => {\r\n    // Logic for next action\r\n    alert('Next action'); // Replace this with your desired action\r\n    handleCloseModal(); // Close modal after next action\r\n  };\r\n\r\n  return (\r\n    <div className=\"mpin-container\">\r\n      <h2 className=\"mpin-title\">Enter mPIN</h2>\r\n      <p className=\"mpin-instruction\">Set up a 4-digit MPIN for quick access</p>\r\n      <div className=\"mpin-input-container\">\r\n        {mpin.map((value, index) => (\r\n          <input\r\n            key={index}\r\n            id={`mpin-input-${index + 1}`}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={(e) => handleChange(index, e.target.value, false)}\r\n            className=\"mpin-input\"\r\n            maxLength={1}\r\n          />\r\n        ))}\r\n      </div>\r\n      <p className=\"mpin-instruction\">Confirm pin with the same boxes</p>\r\n      <div className=\"mpin-input-container\">\r\n        {confirmMpin.map((value, index) => (\r\n          <input\r\n            key={index}\r\n            id={`confirm-input-${index + 1}`}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={(e) => handleChange(index, e.target.value, true)}\r\n            className=\"mpin-input\"\r\n            maxLength={1}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button className=\"confirm-mpin-button\" onClick={handleSubmit}>\r\n        Confirm mPIN\r\n      </button>\r\n\r\n      {/* Modal */}\r\n      {isModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <span className=\"close-button\" onClick={handleCloseModal}>&times;</span>\r\n            <img src={successIcon} alt=\"Success Icon\" className=\"modal-icon\" />\r\n            <p className=\"modal-message\"><strong>Your mPIN has been set successfully</strong></p>\r\n            <button className=\"next-button\" onClick={handleNext}>Next</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mpin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}