{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MFokmare\\\\Downloads\\\\AIG-Mobile\\\\src\\\\Pages\\\\Mpin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../theme/Mpin.css';\nimport successIcon from '../assets/images/mpin-icon.png'; // Update the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mpin = () => {\n  _s();\n  const [mpin, setMpin] = useState(['', '', '', '']);\n  const [confirmMpin, setConfirmMpin] = useState(['', '', '', '']);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleChange = (index, value, isConfirm) => {\n    if (value.length <= 1) {\n      const newMpin = isConfirm ? [...confirmMpin] : [...mpin];\n      newMpin[index] = value;\n      if (isConfirm) {\n        setConfirmMpin(newMpin);\n      } else {\n        setMpin(newMpin);\n      }\n      if (value && index < 3) {\n        var _document$getElementB;\n        (_document$getElementB = document.getElementById(`${isConfirm ? 'confirm' : 'mpin'}-input-${index + 1}`)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.focus();\n      }\n    }\n  };\n  const history = useNavigate();\n  const handleSubmit = () => {\n    const mpinCode = mpin.join('');\n    const confirmCode = confirmMpin.join('');\n    if (mpinCode === confirmCode) {\n      setIsModalOpen(true); // Open the modal\n    } else {\n      alert('MPINs do not match. Please try again.');\n    }\n    history('/profile');\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false); // Close the modal\n  };\n  const handleNext = () => {\n    // Logic for next action\n    alert('Next action'); // Replace this with your desired action\n    handleCloseModal(); // Close modal after next action\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mpin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mpin-title\",\n      children: \"Enter mPIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mpin-instruction\",\n      children: \"Set up a 4-digit MPIN for quick access\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mpin-input-container\",\n      children: mpin.map((value, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        id: `mpin-input-${index + 1}`,\n        type: \"text\",\n        value: value,\n        onChange: e => handleChange(index, e.target.value, false),\n        className: \"mpin-input\",\n        maxLength: 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mpin-instruction\",\n      children: \"Confirm pin with the same boxes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mpin-input-container\",\n      children: confirmMpin.map((value, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        id: `confirm-input-${index + 1}`,\n        type: \"text\",\n        value: value,\n        onChange: e => handleChange(index, e.target.value, true),\n        className: \"mpin-input\",\n        maxLength: 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"confirm-mpin-button\",\n      onClick: handleSubmit,\n      children: \"Confirm mPIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-button\",\n          onClick: handleCloseModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: successIcon,\n          alt: \"Success Icon\",\n          className: \"modal-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-message\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Your mPIN has been set successfully\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-button\",\n          onClick: handleNext,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Mpin, \"ByB9he1vIkNWn1YJiihli0nyDqg=\", false, function () {\n  return [useNavigate];\n});\n_c = Mpin;\nexport default Mpin;\nvar _c;\n$RefreshReg$(_c, \"Mpin\");","map":{"version":3,"names":["React","useState","useNavigate","successIcon","jsxDEV","_jsxDEV","Mpin","_s","mpin","setMpin","confirmMpin","setConfirmMpin","isModalOpen","setIsModalOpen","handleChange","index","value","isConfirm","length","newMpin","_document$getElementB","document","getElementById","focus","history","handleSubmit","mpinCode","join","confirmCode","alert","handleCloseModal","handleNext","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","type","onChange","e","target","maxLength","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/MFokmare/Downloads/AIG-Mobile/src/Pages/Mpin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../theme/Mpin.css';\r\n\r\nimport successIcon from '../assets/images/mpin-icon.png'; // Update the path as necessary\r\n\r\nconst Mpin = () => {\r\n\r\n  const [mpin, setMpin] = useState(['', '', '', '']);\r\n  const [confirmMpin, setConfirmMpin] = useState(['', '', '', '']);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleChange = (index, value, isConfirm) => {\r\n    if (value.length <= 1) {\r\n      const newMpin = isConfirm ? [...confirmMpin] : [...mpin];\r\n      newMpin[index] = value;\r\n\r\n      if (isConfirm) {\r\n        setConfirmMpin(newMpin);\r\n      } else {\r\n        setMpin(newMpin);\r\n      }\r\n\r\n      if (value && index < 3) {\r\n        document.getElementById(`${isConfirm ? 'confirm' : 'mpin'}-input-${index + 1}`)?.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  const history = useNavigate();\r\n\r\n  const handleSubmit = () => {\r\n    const mpinCode = mpin.join('');\r\n    const confirmCode = confirmMpin.join('');\r\n    if (mpinCode === confirmCode) {\r\n      setIsModalOpen(true); // Open the modal\r\n    } else {\r\n      alert('MPINs do not match. Please try again.');\r\n    }\r\n\r\n    history('/profile'); \r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false); // Close the modal\r\n  };\r\n\r\n  const handleNext = () => {\r\n    // Logic for next action\r\n    alert('Next action'); // Replace this with your desired action\r\n    handleCloseModal(); // Close modal after next action\r\n  };\r\n\r\n  return (\r\n    <div className=\"mpin-container\">\r\n      <h2 className=\"mpin-title\">Enter mPIN</h2>\r\n      <p className=\"mpin-instruction\">Set up a 4-digit MPIN for quick access</p>\r\n      <div className=\"mpin-input-container\">\r\n        {mpin.map((value, index) => (\r\n          <input\r\n            key={index}\r\n            id={`mpin-input-${index + 1}`}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={(e) => handleChange(index, e.target.value, false)}\r\n            className=\"mpin-input\"\r\n            maxLength={1}\r\n          />\r\n        ))}\r\n      </div>\r\n      <p className=\"mpin-instruction\">Confirm pin with the same boxes</p>\r\n      <div className=\"mpin-input-container\">\r\n        {confirmMpin.map((value, index) => (\r\n          <input\r\n            key={index}\r\n            id={`confirm-input-${index + 1}`}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={(e) => handleChange(index, e.target.value, true)}\r\n            className=\"mpin-input\"\r\n            maxLength={1}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button className=\"confirm-mpin-button\" onClick={handleSubmit}>\r\n        Confirm mPIN\r\n      </button>\r\n\r\n      {/* Modal */}\r\n      {isModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <span className=\"close-button\" onClick={handleCloseModal}>&times;</span>\r\n            <img src={successIcon} alt=\"Success Icon\" className=\"modal-icon\" />\r\n            <p className=\"modal-message\"><strong>Your mPIN has been set successfully</strong></p>\r\n            <button className=\"next-button\" onClick={handleNext}>Next</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mpin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}